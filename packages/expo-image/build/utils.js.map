{"version":3,"file":"utils.js","sourceRoot":"","sources":["../src/utils.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,eAAe,EAIf,eAAe,GAChB,MAAM,eAAe,CAAC;AAEvB,IAAI,kCAAkC,GAAG,KAAK,CAAC;AAC/C,IAAI,8BAA8B,GAAG,KAAK,CAAC;AAE3C;;;GAGG;AACH,MAAM,UAAU,iBAAiB,CAC/B,UAA4B,EAC5B,UAA4B;IAE5B,IAAI,UAAU,EAAE;QACd,OAAO,UAAU,CAAC;KACnB;IACD,IAAI,UAAU,EAAE;QACd,IAAI,CAAC,kCAAkC,EAAE;YACvC,OAAO,CAAC,GAAG,CAAC,yEAAyE,CAAC,CAAC;YACvF,kCAAkC,GAAG,IAAI,CAAC;SAC3C;QAED,QAAQ,UAAU,EAAE;YAClB,KAAK,eAAe,CAAC,OAAO;gBAC1B,OAAO,eAAe,CAAC,OAAO,CAAC;YACjC,KAAK,eAAe,CAAC,KAAK;gBACxB,OAAO,eAAe,CAAC,KAAK,CAAC;YAC/B,KAAK,eAAe,CAAC,OAAO;gBAC1B,OAAO,eAAe,CAAC,IAAI,CAAC;YAC9B,KAAK,eAAe,CAAC,MAAM;gBACzB,OAAO,eAAe,CAAC,UAAU,CAAC;YACpC,KAAK,eAAe,CAAC,MAAM;gBACzB,IAAI,CAAC,8BAA8B,EAAE;oBACnC,OAAO,CAAC,GAAG,CAAC,2DAA2D,CAAC,CAAC;oBACzE,8BAA8B,GAAG,IAAI,CAAC;iBACvC;SACJ;KACF;IACD,OAAO,eAAe,CAAC,OAAO,CAAC;AACjC,CAAC;AAED;;;GAGG;AACH,MAAM,UAAU,sBAAsB,CACpC,eAAsC;IAEtC,IAAI,OAAO,eAAe,KAAK,QAAQ,EAAE;QACvC,MAAM,6BAA6B,GAG/B;YACF,MAAM,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE;YACnC,GAAG,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE;YAC5B,KAAK,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE;YAC/B,MAAM,EAAE,EAAE,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE;YAClC,IAAI,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,EAAE;YAC7B,YAAY,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE;YACrC,WAAW,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE;YACjC,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE;YAC/B,cAAc,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE;YACxC,WAAW,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE;YACjC,cAAc,EAAE,EAAE,MAAM,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE;YACvC,eAAe,EAAE,EAAE,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE;YAC3C,cAAc,EAAE,EAAE,MAAM,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE;YACvC,aAAa,EAAE,EAAE,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE;YACrC,aAAa,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,EAAE;YACtC,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE;YAC/B,aAAa,EAAE,EAAE,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE;SACtC,CAAC;QACF,MAAM,qBAAqB,GAAG,6BAA6B,CAAC,eAAe,CAAC,CAAC;QAE7E,IAAI,CAAC,qBAAqB,EAAE;YAC1B,OAAO,CAAC,IAAI,CAAC,mCAAmC,eAAe,cAAc,CAAC,CAAC;YAC/E,OAAO,6BAA6B,CAAC,MAAM,CAAC;SAC7C;QACD,OAAO,qBAAqB,CAAC;KAC9B;IACD,OAAO,eAAe,CAAC;AACzB,CAAC","sourcesContent":["import {\n  ImageContentFit,\n  ImageContentPosition,\n  ImageContentPositionObject,\n  ImageContentPositionString,\n  ImageResizeMode,\n} from './Image.types';\n\nlet loggedResizeModeDeprecationWarning = false;\nlet loggedRepeatDeprecationWarning = false;\n\n/**\n * If the `contentFit` is not provided, it's resolved from the the equivalent `resizeMode` prop\n * that we support to provide compatibility with React Native Image.\n */\nexport function resolveContentFit(\n  contentFit?: ImageContentFit,\n  resizeMode?: ImageResizeMode\n): ImageContentFit {\n  if (contentFit) {\n    return contentFit;\n  }\n  if (resizeMode) {\n    if (!loggedResizeModeDeprecationWarning) {\n      console.log('[expo-image]: Prop \"resizeMode\" is deprecated, use \"contentFit\" instead');\n      loggedResizeModeDeprecationWarning = true;\n    }\n\n    switch (resizeMode) {\n      case ImageResizeMode.CONTAIN:\n        return ImageContentFit.CONTAIN;\n      case ImageResizeMode.COVER:\n        return ImageContentFit.COVER;\n      case ImageResizeMode.STRETCH:\n        return ImageContentFit.FILL;\n      case ImageResizeMode.CENTER:\n        return ImageContentFit.SCALE_DOWN;\n      case ImageResizeMode.REPEAT:\n        if (!loggedRepeatDeprecationWarning) {\n          console.log('[expo-image]: Resize mode \"repeat\" is no longer supported');\n          loggedRepeatDeprecationWarning = true;\n        }\n    }\n  }\n  return ImageContentFit.CONTAIN;\n}\n\n/**\n * It resolves a stringified form of the `contentPosition` prop to an object,\n * which is the only form supported in the native code.\n */\nexport function resolveContentPosition(\n  contentPosition?: ImageContentPosition\n): ImageContentPositionObject | undefined {\n  if (typeof contentPosition === 'string') {\n    const contentPositionStringMappings: Record<\n      ImageContentPositionString,\n      ImageContentPositionObject\n    > = {\n      center: { top: '50%', left: '50%' },\n      top: { top: 0, left: '50%' },\n      right: { top: '50%', right: 0 },\n      bottom: { bottom: 0, left: '50%' },\n      left: { top: '50%', left: 0 },\n      'top center': { top: 0, left: '50%' },\n      'top right': { top: 0, right: 0 },\n      'top left': { top: 0, left: 0 },\n      'right center': { top: '50%', right: 0 },\n      'right top': { top: 0, right: 0 },\n      'right bottom': { bottom: 0, right: 0 },\n      'bottom center': { bottom: 0, left: '50%' },\n      'bottom right': { bottom: 0, right: 0 },\n      'bottom left': { bottom: 0, left: 0 },\n      'left center': { top: '50%', left: 0 },\n      'left top': { top: 0, left: 0 },\n      'left bottom': { bottom: 0, left: 0 },\n    };\n    const contentPositionObject = contentPositionStringMappings[contentPosition];\n\n    if (!contentPositionObject) {\n      console.warn(`[expo-image]: Content position \"${contentPosition}\" is invalid`);\n      return contentPositionStringMappings.center;\n    }\n    return contentPositionObject;\n  }\n  return contentPosition;\n}\n"]}