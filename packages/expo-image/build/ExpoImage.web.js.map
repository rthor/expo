{"version":3,"file":"ExpoImage.web.js","sourceRoot":"","sources":["../src/ExpoImage.web.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { ImageContentFit, ImageContentPosition, ImageProps, ImageSource } from './Image.types';\nimport { resolveContentFit, resolveContentPosition } from './utils';\n\nconst resolveAssetSource = (source: ImageSource | string | undefined | null) => {\n  if (source === null || source === undefined) return undefined;\n\n  if (typeof source === 'string') {\n    return { uri: source };\n  }\n  return source;\n};\n\nconst getObjectFitFromContentFit = (contentFit?: ImageContentFit) => {\n  switch (contentFit) {\n    case ImageContentFit.CONTAIN:\n      return 'contain';\n    case ImageContentFit.COVER:\n      return 'cover';\n    case ImageContentFit.FILL:\n      return 'fill';\n    case ImageContentFit.SCALE_DOWN:\n      return 'scale-down';\n    case ImageContentFit.NONE:\n      return 'none';\n    default:\n      return 'fill';\n  }\n};\n\nconst ensureUnit = (value: string | number) => {\n  const trimmedValue = String(value).trim();\n  if (trimmedValue.endsWith('%')) return trimmedValue;\n  return `${trimmedValue}px`;\n};\n\nconst getObjectPositionFromContentPosition = (contentPosition?: ImageContentPosition) => {\n  const resolvedPosition =\n    typeof contentPosition === 'string' ? resolveContentPosition(contentPosition) : contentPosition;\n  if (!resolvedPosition) return undefined;\n  if (!('top' in resolvedPosition || 'bottom' in resolvedPosition)) {\n    (resolvedPosition as any).top = '50%';\n  }\n  if (!('left' in resolvedPosition || 'right' in resolvedPosition)) {\n    (contentPosition as any).left = '50%';\n  }\n  return ['top', 'bottom', 'left', 'right']\n    .map((key) => {\n      if (key in resolvedPosition) {\n        return `${key} ${ensureUnit(resolvedPosition[key])}`;\n      }\n      return '';\n    })\n    .join(' ');\n};\n\nexport default function ExpoImage({\n  source,\n  defaultSource,\n  loadingIndicatorSource,\n  contentPosition,\n  onLoad,\n  onLoadStart,\n  onLoadEnd,\n  onError,\n  ...props\n}: ImageProps) {\n  const { aspectRatio, backgroundColor, transform, borderColor, ...style } = props.style ?? {};\n  const resolvedSource = resolveAssetSource(source as ImageSource | string);\n  return (\n    <>\n      <picture\n        style={{\n          overflow: 'hidden',\n          ...style,\n        }}>\n        <source srcSet={resolvedSource?.uri} />\n        <img\n          src={resolvedSource?.uri}\n          alt=\"Flowers\"\n          style={{\n            width: '100%',\n            height: '100%',\n            aspectRatio: String(aspectRatio),\n            backgroundColor: backgroundColor?.toString(),\n            transform: transform?.toString(),\n            borderColor: borderColor?.toString(),\n            objectFit: getObjectFitFromContentFit(\n              resolveContentFit(props.contentFit, props.resizeMode)\n            ),\n            objectPosition: getObjectPositionFromContentPosition(contentPosition),\n          }}\n        />\n      </picture>\n    </>\n  );\n}\n"]}